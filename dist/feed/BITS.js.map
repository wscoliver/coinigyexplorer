{"version":3,"sources":["../../src/feed/BITS.js"],"names":["processOrder","incoming","db","topic","mesg","nowDay","getDay","collectionName","collection","bidMap","askMap","console","log","length","forEach","row","px","Math","floor","orderSide","qty","hasOwnProperty","prevList","unshift","processTrade"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAASC,QAAT,EAAmBC,EAAnB,EAAuB;AAC1C,MAAMC,QAAQF,SAAS,OAAT,CAAd;AACA,MAAMG,OAAOH,SAAS,MAAT,CAAb;AACA,MAAMI,SAAS,gBAAMC,MAAN,EAAf;AACA,MAAMC,iBAAoBF,MAApB,SAA8BF,KAApC;AACA,MAAMK,aAAaN,GAAGM,UAAH,CAAcD,cAAd,CAAnB;AACA,MAAME,SAAS,EAAf;AACA,MAAMC,SAAS,EAAf;AACAC,UAAQC,GAAR,CAAYR,KAAKS,MAAjB;AACAT,OAAKU,OAAL,CAAa,UAACC,GAAD,EAAS;AACpBJ,YAAQC,GAAR,UAAmBG,IAAI,OAAJ,CAAnB,eAAyCA,IAAI,WAAJ,CAAzC;AACA,QAAMC,KAAKC,KAAKC,KAAL,CAAWH,IAAI,OAAJ,IAAe,EAA1B,CAAX;AACA,QAAMI,YAAYJ,IAAI,WAAJ,CAAlB;AACA,QAAMK,MAAMH,KAAKC,KAAL,CAAWH,IAAI,UAAJ,IAAiB,KAA5B,CAAZ;AACA,QAAIK,MAAM,CAAV,EAAc;;AAEZ,UAAGD,aAAa,MAAhB,EAAwB;AACtB,YAAGV,OAAOY,cAAP,CAAsBL,EAAtB,CAAH,EAA8B;AAC5B,cAAMM,WAAWb,OAAOO,EAAP,CAAjB;AACAM,mBAASC,OAAT,CAAiB,CAACP,EAAD,EAAKI,GAAL,CAAjB;AACD,SAHD,MAGO;AACLX,iBAAOO,EAAP,IAAa,CAAC,CAACA,EAAD,EAAKI,GAAL,CAAD,CAAb;AACD;AACF,OAPD,MAOO;AACLT,gBAAQC,GAAR,CAAY,CAACI,EAAD,EAAKI,GAAL,CAAZ;AACA,YAAGV,OAAOW,cAAP,CAAsBL,EAAtB,CAAH,EAA8B;AAC5B,cAAMM,YAAWZ,OAAOM,EAAP,CAAjB;AACAM,oBAASC,OAAT,CAAiB,CAACP,EAAD,EAAKI,GAAL,CAAjB;AACD,SAHD,MAGO;AACLV,iBAAOM,EAAP,IAAa,CAAC,CAACA,EAAD,EAAKI,GAAL,CAAD,CAAb;AACD;AACF;AACF;AACF,GAxBD;AAyBAT,UAAQC,GAAR,CAAY,QAAZ;AACAD,UAAQC,GAAR,CAAYH,MAAZ;AACAE,UAAQC,GAAR,CAAY,QAAZ;AACAD,UAAQC,GAAR,CAAYF,MAAZ;AACD,CAtCD;AAuCA,IAAMc,eAAe,SAAfA,YAAe,CAASpB,IAAT,EAAeF,EAAf,EAAmB;AACtCS,UAAQC,GAAR,CAAYR,IAAZ;AACD,CAFD;kBAGe;AACbJ,4BADa;AAEbwB;AAFa,C","file":"BITS.js","sourcesContent":["import utils from '../lib/utils'\n\nconst processOrder = function(incoming, db) {\n  const topic = incoming['topic']\n  const mesg = incoming['mesg']\n  const nowDay = utils.getDay()\n  const collectionName = `${nowDay}:${topic}`\n  const collection = db.collection(collectionName)\n  const bidMap = {}\n  const askMap = {}\n  console.log(mesg.length)\n  mesg.forEach((row) => {\n    console.log(`Px: ${row['price']} Side: ${row['ordertype']}`)\n    const px = Math.floor(row['price'] * 10)\n    const orderSide = row['ordertype']\n    const qty = Math.floor(row['quantity']* 10000)\n    if( qty > 0 ) {\n\n      if(orderSide == 'Sell') {\n        if(bidMap.hasOwnProperty(px)) {\n          const prevList = bidMap[px]\n          prevList.unshift([px, qty])\n        } else {\n          bidMap[px] = [[px, qty]]\n        }\n      } else {\n        console.log([px, qty])\n        if(askMap.hasOwnProperty(px)) {\n          const prevList = askMap[px]\n          prevList.unshift([px, qty])\n        } else {\n          askMap[px] = [[px, qty]]\n        }\n      }\n    }\n  })\n  console.log('bidMap')\n  console.log(bidMap)\n  console.log('askMap')\n  console.log(askMap)\n}\nconst processTrade = function(mesg, db) {\n  console.log(mesg)\n}\nexport default {\n  processOrder,\n  processTrade\n}\n"]}