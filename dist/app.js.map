{"version":3,"sources":["../src/app.js"],"names":["promisifyAll","prototype","MongoClient","rargs","process","argv","slice","configPath","config","path","penv","env","apiCredentials","url","connectAsync","db","subj","Subject","run","subscribe","incoming"],"mappings":";;;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAKA;;;;;;AAJA;AACA,mBAASA,YAAT,CAAsB,eAAUC,SAAhC,E,CAdA;;;;AAeA,mBAASD,YAAT,CAAsB,kBAAQE,WAA9B;AACA;;AAEA;AACA,IAAMC,QAAQC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAd;AACA,IAAMD,OAAO,wBAASF,KAAT,CAAb;AACA,IAAMI,aAAaF,KAAK,QAAL,CAAnB;AACA,iBAAOG,MAAP,CAAc,EAAEC,MAAMF,UAAR,EAAd;AACA,IAAMG,OAAON,QAAQO,GAArB;;AAEA,IAAMC,iBAAiB;AACrB,YAAUF,KAAK,WAAL,CADW;AAErB,eAAaA,KAAK,cAAL;AAEf;AAJuB,CAAvB,CAKA,2DAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACKR,qBADL,GACmB,kBAAQA,WAD3B;AAEKW,aAFL,GAEW,mCAFX;AAAA;AAAA,iBAGgBX,YAAYY,YAAZ,CAAyBD,GAAzB,CAHhB;;AAAA;AAGKE,YAHL;AAIKC,cAJL,GAIY,IAAI,aAAGC,OAAP,EAJZ;;AAKD,4BAAQC,GAAR,CAAYN,cAAZ,EAA4BI,IAA5B;;AAEAA,eAAKG,SAAL,CAAe,UAACC,QAAD,EAAc;AAC3B,gBAAGA,SAAS,OAAT,KAAqB,sBAAxB,EAAgD;AAC9C,6BAAK,cAAL,EAAqBA,QAArB,EAA+BL,EAA/B;AACD;AACF,WAJD;;AAPC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAH","file":"app.js","sourcesContent":["/*\n  Main App\n*/\n\nimport minimist from 'minimist'\nimport dotenv from 'dotenv'\nimport Datastore from 'nedb'\nimport Bluebird from 'bluebird'\nimport co from 'co'\nimport socketCluster from 'socketcluster-client'\nimport coinigy from './connectors/coinigy'\nimport Rx from 'rx'\nimport mongodb from 'mongodb'\n// bluebird\nBluebird.promisifyAll(Datastore.prototype)\nBluebird.promisifyAll(mongodb.MongoClient)\n// Internal Libraries\nimport BITS from './feed/BITS'\n// Process Arguments\nconst rargs = process.argv.slice(2)\nconst argv = minimist(rargs)\nconst configPath = argv['config']\ndotenv.config({ path: configPath })\nconst penv = process.env\n\nconst apiCredentials = {\n  'apiKey': penv['X_API_KEY'],\n  'apiSecret': penv['X_API_SECRET']\n}\n// Grab all events and pass to Rx Subject.\nco(function* () {\n  const MongoClient = mongodb.MongoClient\n  const url = 'mongodb://localhost:27017/coinigy'\n  const db = yield MongoClient.connectAsync(url)\n  const subj = new Rx.Subject()\n  coinigy.run(apiCredentials, subj)\n\n  subj.subscribe((incoming) => {\n    if(incoming['topic'] == 'ORDER-BITS--USD--BTC') {\n      BITS['processOrder'](incoming, db)\n    }\n  })\n\n})\n"]}